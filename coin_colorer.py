"""
Coin Colorer ‚Äî –≤—ã–¥–µ–ª—è–µ—Ç UTXO —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—é (–≤—Ö–æ–¥—è—â–∏–µ/–∏—Å—Ö–æ–¥—è—â–∏–µ, —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ/–Ω–µ—Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –∞–¥—Ä–µ—Å–∞).
"""

import sys
import requests

def fetch_transaction(txid):
    url = f"https://blockstream.info/api/tx/{txid}"
    r = requests.get(url)
    r.raise_for_status()
    return r.json()

def extract_addresses(tx_part):
    addresses = []
    for entry in tx_part:
        addr = entry.get("scriptpubkey_address")
        if addr:
            addresses.append(addr)
    return addresses

def main(txid):
    print(f"üé® –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ {txid}...")
    try:
        tx = fetch_transaction(txid)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:", e)
        return

    inputs = extract_addresses(tx.get("vin", []))
    outputs = extract_addresses(tx.get("vout", []))

    print("
üü• –í—Ö–æ–¥—è—â–∏–µ –∞–¥—Ä–µ—Å–∞:")
    for addr in inputs:
        print(f"  - {addr}")

    print("
üü© –ò—Å—Ö–æ–¥—è—â–∏–µ –∞–¥—Ä–µ—Å–∞:")
    for addr in outputs:
        if addr in inputs:
            print(f"  - {addr} (üîÅ —Ç–æ—Ç –∂–µ –∞–¥—Ä–µ—Å)")
        else:
            print(f"  - {addr}")

    print("
üéØ –í—Å–µ–≥–æ –≤—Ö–æ–¥–æ–≤:", len(inputs), "| –í—Å–µ–≥–æ –≤—ã—Ö–æ–¥–æ–≤:", len(outputs))

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python coin_colorer.py <txid>")
        sys.exit(1)
    main(sys.argv[1])
